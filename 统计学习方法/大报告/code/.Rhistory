library(MASS)
fix(Boston)
lm.fit <- lm(medv~., data = Boston)
summary(lm.fit)
library(glmnet)
install.packages('glmnet')
library(glmnet)
x <- model.matrix(medv~.,Boston)[,-1]
y <- Boston$medv
View(x)
install.packages(c("lars", "msgps"))
source('E:/Github/2020_high_dimension/统计学习方法/大报告/code/lasso1.R', encoding = 'UTF-8', echo=TRUE)
source('E:/Github/2020_high_dimension/统计学习方法/大报告/code/lasso1.R', encoding = 'UTF-8', echo=TRUE)
source('E:/Github/2020_high_dimension/统计学习方法/大报告/code/lasso1.R', encoding = 'UTF-8', echo=TRUE)
source('E:/Github/2020_high_dimension/统计学习方法/大报告/code/lasso1.R', encoding = 'UTF-8', echo=TRUE)
source('E:/Github/2020_high_dimension/统计学习方法/大报告/code/lasso1.R', encoding = 'UTF-8', echo=TRUE)
source('E:/Github/2020_high_dimension/统计学习方法/大报告/code/lasso1.R', encoding = 'UTF-8', echo=TRUE)
library(MASS)
dim(Boston)
n,p <- dim(X)
n,p <- dim(X)[1],dim(X)[2]
n <- dim(X)[0]
n <- dim(X)[0];p <- dim(X)[1]
source('E:/Github/2020_high_dimension/统计学习方法/大报告/code/lasso1.R', encoding = 'UTF-8', echo=TRUE)
dim(X)
dim(y)
X <- model.matrix(medv~.,Boston)[,-1]
y <- Boston$medv
dim(y)
y <- Boston$medv
y
source('E:/Github/2020_high_dimension/统计学习方法/大报告/code/lasso1.R', encoding = 'UTF-8', echo=TRUE)
source('E:/Github/2020_high_dimension/统计学习方法/大报告/code/lasso1.R', encoding = 'UTF-8', echo=TRUE)
n
n <- dim(X)[1];p <- dim(X)[2]
y1 = rep(0,n)
source('E:/Github/2020_high_dimension/统计学习方法/大报告/code/lasso1.R', encoding = 'UTF-8', echo=TRUE)
source('E:/Github/2020_high_dimension/统计学习方法/大报告/code/lasso1.R', encoding = 'UTF-8', echo=TRUE)
##R自带函数结果
beta_hat_1
source('E:/Github/2020_high_dimension/统计学习方法/大报告/code/lasso1.R', encoding = 'UTF-8', echo=TRUE)
source('E:/Github/2020_high_dimension/统计学习方法/大报告/code/lasso1.R', encoding = 'UTF-8', echo=TRUE)
lasso.mod=glmnet(t(X), y, alpha=1,lambda=0.01)
summary(lasso.mod)
lasso.coef = predict(lasso.mod,type = "coefficients",s= 0.01)
lasso.coef
beta_hat_1
lasso.mod=glmnet(t(X), y, alpha=1,lambda=0.01,offset = 0)
summary(lasso.mod)
lasso.coef = predict(lasso.mod,type = "coefficients",s= 0.01)
lasso.coef
lar1 <- lars(t(X),y,type = "lasso")
beta_hat_2 <- lar1$beta
beta_hat_1
beta_hat_2
lar1$Cp[which.min(lar$Cp)]
1
summary(lar1)
lar1$Cp
which.min(lar1$Cp)
beta_hat_2[13,]
beta_hat_1
